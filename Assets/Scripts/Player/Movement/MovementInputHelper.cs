using UnityEngine;
using UnityEngine.InputSystem;

namespace Player.Movement
{
	public class MovementInputHelper : MonoBehaviour
	{
		// this is the c# class generated by the input system asset
		private PlayerControls _playerControls;
		//this is the action named "Move" (from the middle pane of the asset window)
		private InputAction _move;

		//this is the class that handles all the movement values that this object receives via the input system events 
		private PlayerMovement _playerMovement; 

		private void Awake()
		{
			_playerControls = new PlayerControls();
		}

		private void OnEnable()
		{
			_move = _playerControls.Player.Move;
			_move.Enable();
			_playerControls.Player.Run.performed += OnRunStart;
			_playerControls.Player.Run.Enable();

			_playerControls.Player.Run.canceled += OnRunEnd;
			_playerControls.Player.Run.Enable();
		}

		private void OnDisable()
		{
			_playerControls.Player.Run.performed -= OnRunStart;
			_playerControls.Player.Run.Disable();

			_playerControls.Player.Run.canceled -= OnRunEnd;
			_playerControls.Player.Run.Disable();
			
			_move.Disable();
		}

		private void Start()
		{
			_playerMovement = GetComponent<PlayerMovement>();
		}

		private void Update()
		{
			var input = _move.ReadValue<Vector2>();
			_playerMovement.Execute(input);
		}

		private void OnRunStart(InputAction.CallbackContext context) => _playerMovement.IsRunning = true;

		private void OnRunEnd(InputAction.CallbackContext context) => _playerMovement.IsRunning = false;
	}
}